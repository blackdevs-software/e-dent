apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-deployment
  namespace: edent

spec:
  selector:
    matchLabels:
      app: edentclient

  strategy:
    type: Recreate

  template:
    metadata:
      name: edent-app
      labels:
        app: edentclient

    spec:
      initContainers:
        - name: init-client
          image: mysql:8.0
          imagePullPolicy: IfNotPresent
          command:
            - 'sh'
            - '-c'
            - 'sleep 10 && while [ "$(mysqladmin -u e$MYSQL_USER -p$MYSQL_PASSWORD -h $MYSQL_HOST -P 3306 ping --silent 1> /dev/null 2>&1; echo $?)" -ne 0 ]; do echo "Waiting for MySQL" && sleep 5; done'

          env:
            - name: MYSQL_HOST
              value: mysql.edent

            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: MYSQL_USER

            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: MYSQL_PASSWORD

      containers:
        - name: client
          image: juliocesarmidia/edent-app:v1.0.0
          imagePullPolicy: IfNotPresent

          ports:
            - containerPort: 80
              name: client-port

          env:
            - name: MYSQL_HOST
              value: mysql.edent

            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: MYSQL_DATABASE

            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: MYSQL_USER

            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: env-secrets
                  key: MYSQL_PASSWORD

          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            timeoutSeconds: 30

          resources:
            requests:
              memory: "128Mi"
              cpu: "150m"

            limits:
              memory: "256Mi"
              cpu: "300m"

      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: client-service
  namespace: edent

spec:
  type: ClusterIP

  selector:
    app: edentclient

  ports:
    - port: 80
      targetPort: client-port
      protocol: TCP

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: client-hpa
  namespace: edent

spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: client-deployment

  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: app-ingress
  namespace: edent

  annotations:
    kubernetes.io/ingress.class: nginx

spec:
  rules:
    - http:
        paths:
          - path: /
            backend:
              serviceName: client-service
              servicePort: 80
